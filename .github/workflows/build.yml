name: Build Gist Web
run-name: Build gist-web - ${{ github.event.commits[0].message }}

on:
  push:
    branches:
      - 'develop'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: 16
      - name: Build
        shell: bash
        run: |
          npm install
          npm run build:prod
      - name: Merge to develop
        shell: bash
        run: |
          git checkout develop
          git add .
          set +e  # Grep succeeds with nonzero exit codes to show results.
          git status | grep modified
          if [ $? -eq 0 ]
          then
              set -e
              git commit -am "New version of gist-web"
              git push
          else
              set -e
              echo "No changes since last run"
          fi
      - name: Release to master
        shell: bash
        run: |
          git config user.name "ami-ci"
          git config user.email "<>"
          RELEASE_VERSION="`date +%s%3N`"
          echo "Release $RELEASE_VERSION"
          git remote update
          git checkout release/$RELEASE_VERSION 2>/dev/null || git checkout -b release/$RELEASE_VERSION origin/develop
          git push origin release/$RELEASE_VERSION
          git checkout master
          git branch
          git pull origin master
          git merge --allow-unrelated-histories -Xours release/$RELEASE_VERSION
          git push origin master
          git checkout develop
          git branch
          git merge --allow-unrelated-histories -Xours release/$RELEASE_VERSION
          git push origin develop
          git branch -D release/$RELEASE_VERSION
          git branch
          git push origin :release/$RELEASE_VERSION
          git branch -avv
          echo "Release complete"
